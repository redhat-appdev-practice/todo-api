/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (4.3.1).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.redhat.openapi.todo.api;

import com.redhat.openapi.todo.models.Todo;
import java.util.UUID;
import io.swagger.annotations.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.CookieValue;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2020-07-08T17:49:07.896852Z[GMT]")

@Validated
@Api(value = "todos", description = "the todos API")
public interface TodosApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * POST /todos : Create a Todo
     * Creates a new instance of a &#x60;Todo&#x60;.
     *
     * @param todo A new &#x60;Todo&#x60; to be created. (required)
     * @return Successful response. (status code 200)
     */
    @ApiOperation(value = "Create a Todo", nickname = "createTodo", notes = "Creates a new instance of a `Todo`.", response = Todo.class, authorizations = {
        @Authorization(value = "KeyCloak")
    }, tags={ "todos", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successful response.", response = Todo.class) })
    @RequestMapping(value = "/todos",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    default ResponseEntity<Todo> createTodo(@ApiParam(value = "A new `Todo` to be created." ,required=true )  @Valid @RequestBody Todo todo) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"id\" : \"ec3b48dc-938d-11ea-8877-c7ea413b00cb\", \"title\" : \"Example Todo\", \"description\" : \"This is a Todo entity with a description\", \"created\" : \"2020-05-14T09:00:00.000Z\", \"dueDate\" : \"2020-05-20T09:00:00.000Z\", \"complete\" : false }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * DELETE /todos/{todoId} : Delete a Todo
     * Deletes an existing &#x60;Todo&#x60;.
     *
     * @param todoId A unique identifier for a &#x60;Todo&#x60;. (required)
     * @return Successful response. (status code 204)
     */
    @ApiOperation(value = "Delete a Todo", nickname = "deleteTodo", notes = "Deletes an existing `Todo`.", authorizations = {
        @Authorization(value = "KeyCloak")
    }, tags={ "todos", })
    @ApiResponses(value = { 
        @ApiResponse(code = 204, message = "Successful response.") })
    @RequestMapping(value = "/todos/{todoId}",
        method = RequestMethod.DELETE)
    default ResponseEntity<Void> deleteTodo(@ApiParam(value = "A unique identifier for a `Todo`.",required=true) @PathVariable("todoId") UUID todoId) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /todos/{todoId} : Get a Todo
     * Gets the details of a single instance of a &#x60;Todo&#x60;.
     *
     * @param todoId A unique identifier for a &#x60;Todo&#x60;. (required)
     * @return Successful response - returns a single &#x60;Todo&#x60;. (status code 200)
     */
    @ApiOperation(value = "Get a Todo", nickname = "getTodo", notes = "Gets the details of a single instance of a `Todo`.", response = Todo.class, authorizations = {
        @Authorization(value = "KeyCloak")
    }, tags={ "todos", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successful response - returns a single `Todo`.", response = Todo.class) })
    @RequestMapping(value = "/todos/{todoId}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<Todo> getTodo(@ApiParam(value = "A unique identifier for a `Todo`.",required=true) @PathVariable("todoId") UUID todoId) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"id\" : \"ec3b48dc-938d-11ea-8877-c7ea413b00cb\", \"title\" : \"Example Todo\", \"description\" : \"This is a Todo entity with a description\", \"created\" : \"2020-05-14T09:00:00.000Z\", \"dueDate\" : \"2020-05-20T09:00:00.000Z\", \"complete\" : false }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /todos : List All todos
     * Gets a list of all &#x60;Todo&#x60; entities.
     *
     * @return Successful response - returns an array of &#x60;Todo&#x60; entities. (status code 200)
     */
    @ApiOperation(value = "List All todos", nickname = "gettodos", notes = "Gets a list of all `Todo` entities.", response = Todo.class, responseContainer = "List", authorizations = {
        @Authorization(value = "KeyCloak")
    }, tags={ "todos", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successful response - returns an array of `Todo` entities.", response = Todo.class, responseContainer = "List") })
    @RequestMapping(value = "/todos",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<List<Todo>> gettodos() {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"id\" : \"ec3b48dc-938d-11ea-8877-c7ea413b00cb\", \"title\" : \"Example Todo\", \"description\" : \"This is a Todo entity with a description\", \"created\" : \"2020-05-14T09:00:00.000Z\", \"dueDate\" : \"2020-05-20T09:00:00.000Z\", \"complete\" : false }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * PUT /todos/{todoId} : Update a Todo
     * Updates an existing &#x60;Todo&#x60;.
     *
     * @param todoId A unique identifier for a &#x60;Todo&#x60;. (required)
     * @param todo Updated &#x60;Todo&#x60; information. (required)
     * @return Successful response. (status code 200)
     */
    @ApiOperation(value = "Update a Todo", nickname = "updateTodo", notes = "Updates an existing `Todo`.", response = Todo.class, authorizations = {
        @Authorization(value = "KeyCloak")
    }, tags={ "todos", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successful response.", response = Todo.class) })
    @RequestMapping(value = "/todos/{todoId}",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.PUT)
    default ResponseEntity<Todo> updateTodo(@ApiParam(value = "A unique identifier for a `Todo`.",required=true) @PathVariable("todoId") UUID todoId,@ApiParam(value = "Updated `Todo` information." ,required=true )  @Valid @RequestBody Todo todo) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"id\" : \"ec3b48dc-938d-11ea-8877-c7ea413b00cb\", \"title\" : \"Example Todo\", \"description\" : \"This is a Todo entity with a description\", \"created\" : \"2020-05-14T09:00:00.000Z\", \"dueDate\" : \"2020-05-20T09:00:00.000Z\", \"complete\" : false }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
